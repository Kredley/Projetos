<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<beans:import resource="file:**/WebContent/WEB-INF/spring/appServlet/servlet-context.xml"/>


    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		
		
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  delete-cookies="JSESSIONID" invalidate-session="true" />
		<!-- enable csrf protection -->
		<csrf/>
		
	</http>
	
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg value="12" />
	</beans:bean>
	
<!-- 	<beans:bean id="userService" class="com.projeto.goku.service.impl.UserService"> -->
<!--   	</beans:bean> -->
  	
<!--   	<beans:bean id="userDao" class="com.projeto.com.dao.impl.UserDao"> -->
<!--   	</beans:bean> -->

		<beans:bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">  
			<beans:property name="dataSource" ref="dataSource"></beans:property>  
		</beans:bean>  
		  
		<beans:bean id="userDaoImpl" class="com.projeto.goku.dao.impl.UserDaoImp">  
			<beans:property name="template" ref="jt"></beans:property>  
		</beans:bean>
		
		<beans:bean id="enderecoDaoImpl" class="com.projeto.goku.dao.impl.EnderecoDaoImp">  
			<beans:property name="template" ref="jt"></beans:property>  
		</beans:bean>    
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from users where username=?" 
				authorities-by-username-query=
					"select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>